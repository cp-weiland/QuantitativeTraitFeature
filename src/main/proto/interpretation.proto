syntax = "proto3";

package org.phenopackets.schema.v1;

import "base.proto";
import "phenopackets.proto";

option java_multiple_files = true;
option java_package = "org.phenopackets.schema.v1";

message Interpretation {
    enum ResolutionStatus {
        UNKNOWN = 0;
        SOLVED = 1;
        UNSOLVED = 2;
        IN_PROGRESS = 3;
    }
    // id of the interpretation
    string id = 1;
    // status of the interpretation
    ResolutionStatus resolution_status = 2;
    // The individual or family which this interpretation is derived from
    oneof phenopacket_or_family {
        org.phenopackets.schema.v1.Phenopacket phenopacket = 3;
        org.phenopackets.schema.v1.Family family = 4;
    }
    // The diagnosis made in this interpretation
    repeated Diagnosis diagnosis = 5;
    // Structured definitions of the resources and ontologies used within the phenopacket. REQUIRED
    org.phenopackets.schema.v1.core.MetaData meta_data = 6;
}

message Diagnosis {
    // The disease/condition assigned to the diagnosis
    org.phenopackets.schema.v1.core.Disease disease = 1;
    // genomic features containing the status of their contribution towards the diagnosis
    repeated GenomicInterpretation genomic_interpretations = 2;
}

// A statement about the contribution of a genomic element towards the observed phenotype. Note that this does not intend
// to encode any knowledge or results of specific computations.
message GenomicInterpretation {
    enum Status {
        UNKNOWN = 0;
        REJECTED = 1;
        CANDIDATE = 2;
        CAUSATIVE = 3;
    }
    Status status = 1;
    oneof call {
        org.phenopackets.schema.v1.core.Gene gene = 2;
        org.phenopackets.schema.v1.core.Variant variant = 3;
    }
}